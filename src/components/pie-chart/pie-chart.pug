mixin pie-chart({title, items} = {})
  -
    const GAP = 1;
    const FIRST_OFFSET = 25;
    const circumference = 100;
    const radius = circumference / (2 * 3.1415926536);
    const defaultItems = [
      {'type': 'normal','count': '260', 'label': 'Удовлетворительно'},
      {'type': 'good', 'count': '260', 'label': 'Хорошо'},
      {'type': 'fine', 'count': '520', 'label': 'Великолепно'},
      {'type': 'bad', 'count': '0', 'label': 'Разочарован'},
    ];
    const settings = items ?  items: defaultItems;
    const totalVotes = settings.map(it => it.count).reduce((a, b) => Number.parseInt(a) + Number.parseInt(b), 0);
    title = title || 'Впечатления от номера';

  figure.pie-chart.js-pie-chart(data-chart-data = settings)
    if (title)
      figcaption.pie-chart__title !{title}
    div.pie-chart__wrapper
      div.pie-chart__donut-wrapper
        svg.pie-chart__donut(width="100%" height="100%" viewBox="0 0 34 34" aria-labelledby="votes-title votes-desc" role="img")

          linearGradient#gradient-fine
            stop(offset="0%", stop-color="#FFBA9C")
            stop(offset="100%", stop-color="#FFE39C")
          linearGradient#gradient-good
            stop(offset="0%", stop-color="#66D2EA")
            stop(offset="100%", stop-color="#6FCF97")
          linearGradient#gradient-normal
            stop(offset="0%", stop-color="#8BA4F9")
            stop(offset="100%", stop-color="#BC9CFF")
          linearGradient#gradient-bad
            stop(offset="0%", stop-color="#3D4975")
            stop(offset="100%", stop-color="#919191")

          title(id="votes-title") Диаграмма голосов
          desc(id="votes-desc") На диаграмме представлены 1040 голосов. "Великолепно" - 520 голосов. "Хорошо" - 260 голосов. "Удовлетворительно" - 260 голосов.
          -
            let totalLengthOfPreviousSegments = 0;
          each segment, index in settings
            - let segmentLength = (segment.count / totalVotes) * circumference;
            circle.pie-chart__circle.js-pie-chart__circle(cx="17" cy="17" r= radius fill="transparent" stroke=`url(#gradient-${segment.type})` stroke-width="1"
              stroke-dasharray= `${Math.max(segmentLength - GAP, 0)} ${circumference - segmentLength + GAP}`
              stroke-dashoffset=`${circumference - totalLengthOfPreviousSegments + FIRST_OFFSET - GAP}`
              data-circle-type = segment.type
              data-circle-count = segment.count
            )
            - totalLengthOfPreviousSegments += segmentLength;

          g(class="pie-chart__text")
            text(x="50%" y="50%" class="pie-chart__number js-pie-chart__number" data-total-votes = totalVotes) !{totalVotes}
            text(x="50%" y="50%" class="pie-chart__label js-pie-chart__label") голосов

      figcaption.pie-chart__description-wrapper
        ul.pie-chart__description-list(aria-hidden="true" role="presentation")
          li.pie-chart__description-item.js-pie-chart__description-item.pie-chart__description-item_rating_fine(data-label-type = 'fine') Великолепно
          li.pie-chart__description-item.js-pie-chart__description-item.pie-chart__description-item_rating_good(data-label-type = 'good') Хорошо
          li.pie-chart__description-item.js-pie-chart__description-item.pie-chart__description-item_rating_normal(data-label-type = 'normal') Удовлетворительно
          li.pie-chart__description-item.js-pie-chart__description-item.pie-chart__description-item_rating_bad(data-label-type = 'bad') Разочарован
